//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yokanjeo.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InmoYOKAEntities : DbContext
    {
        public InmoYOKAEntities()
            : base("name=InmoYOKAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrador> Administrador { get; set; }
        public virtual DbSet<Tbl_CompraDetalle> Tbl_CompraDetalle { get; set; }
        public virtual DbSet<Tbl_ImagenMuestra> Tbl_ImagenMuestra { get; set; }
        public virtual DbSet<Tbl_MiembroRoles> Tbl_MiembroRoles { get; set; }
        public virtual DbSet<Tbl_Miembros> Tbl_Miembros { get; set; }
        public virtual DbSet<Tbl_Propiedad> Tbl_Propiedad { get; set; }
        public virtual DbSet<Tbl_Roles> Tbl_Roles { get; set; }
        public virtual DbSet<Tbl_Tipo> Tbl_Tipo { get; set; }
        public virtual DbSet<Tbl_Venta> Tbl_Venta { get; set; }
        public virtual DbSet<Tbl_VentaStatus> Tbl_VentaStatus { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int CambiarContrasenia(Nullable<int> id, string clave, string patron)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarContrasenia", idParameter, claveParameter, patronParameter);
        }
    
        public virtual ObjectResult<byte[]> CargarImagen(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("CargarImagen", idParameter);
        }
    
        public virtual ObjectResult<string> ComunaGet(string searchcomuna)
        {
            var searchcomunaParameter = searchcomuna != null ?
                new ObjectParameter("searchcomuna", searchcomuna) :
                new ObjectParameter("searchcomuna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ComunaGet", searchcomunaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ContarUsuario(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ContarUsuario", usuarioParameter);
        }
    
        public virtual int Eliminar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Eliminar", idParameter);
        }
    
        public virtual ObjectResult<GetSearch_Result> GetSearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearch_Result>("GetSearch", searchParameter);
        }
    
        public virtual ObjectResult<Perfil_Result> Perfil(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Perfil_Result>("Perfil", idParameter);
        }
    
        public virtual int Registrar(string nombres_completo, string correo, string comuna, Nullable<System.DateTime> fecha, string usuario, string clave, string patron, Nullable<int> idUsuario, byte[] imagen)
        {
            var nombres_completoParameter = nombres_completo != null ?
                new ObjectParameter("Nombres_completo", nombres_completo) :
                new ObjectParameter("Nombres_completo", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var comunaParameter = comuna != null ?
                new ObjectParameter("Comuna", comuna) :
                new ObjectParameter("Comuna", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Registrar", nombres_completoParameter, correoParameter, comunaParameter, fechaParameter, usuarioParameter, claveParameter, patronParameter, idUsuarioParameter, imagenParameter);
        }
    
        public virtual int SP_AgregarAdmin(string usuario, string contrasenia, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AgregarAdmin", usuarioParameter, contraseniaParameter, patronParameter);
        }
    
        public virtual ObjectResult<SP_Comunas_Result> SP_Comunas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Comunas_Result>("SP_Comunas");
        }
    
        public virtual ObjectResult<SP_Validar_Admin_Result> SP_Validar_Admin(string usuario, string contrasenia, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contraseniaParameter = contrasenia != null ?
                new ObjectParameter("Contrasenia", contrasenia) :
                new ObjectParameter("Contrasenia", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Validar_Admin_Result>("SP_Validar_Admin", usuarioParameter, contraseniaParameter, patronParameter);
        }
    
        public virtual ObjectResult<Validar_Result> Validar(string usuario, string clave, string patron)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var patronParameter = patron != null ?
                new ObjectParameter("Patron", patron) :
                new ObjectParameter("Patron", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Validar_Result>("Validar", usuarioParameter, claveParameter, patronParameter);
        }
    }
}
